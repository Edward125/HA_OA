<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBwgHBgkICAgKCgkLDhcPDg0NDhwUFREXIh4jIyEeICAl
        KjUtJScyKCAgLj8vMjc5PDw8JC1CRkE6RjU7PDn/2wBDAQoKCg4MDhsPDxs5JiAmOTk5OTk5OTk5OTk5
        OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTn/wAARCADMAMMDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3GiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKQ9KAEpksqRpudwo9TWfd6qkfyxfOfXsP8A
        GseeeS5YtK5PoOwrwsdnlGh7lP3pfgdNLDSnq9EdRHKkqgxsGHtUlcnb3E1s2Ymx6jsa2bPVI5cLL8jf
        pTwOeUa9oVPdl+AVMNKG2qNSikBBAI6Ute4cwUUUUAFFFFABRWFq+urYTrZWsDXt+y+Z5SuFWNB/G7Hh
        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
</value>
  </data>
</root>